from __future__ import annotations
import streamlit as st, pandas as pd
from utils.dataframe import arrow_safe
from utils.eval_exec import realized_impact_report
from utils.envs import get_settings, update_settings

st.title("üß† EV Tuner ‚Äî –∞–≤—Ç–æ-–ø–æ—Ä–æ–≥ impact –¥–ª—è —Å–ø–æ—Ç–∞")

rep = realized_impact_report(window_sec=1800)
if not rep:
    st.info("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö (–Ω—É–∂–Ω—ã –Ω–µ–¥–∞–≤–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è).")
else:
    df = pd.DataFrame(rep).T
    st.dataframe(arrow_safe(df), use_container_width=True)
    st.caption("–ü–æ—Ä–æ–≥ = 1.1 √ó p75 —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–º–ø–∞–∫—Ç–∞, –Ω–æ –Ω–µ –Ω–∏–∂–µ 5 bps.")
    s = get_settings()
    sym = (
        st.text_input(
            "–°–∏–º–≤–æ–ª –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –æ—Ç—á—ë—Ç–µ)",
            value=(list(rep.keys())[0] if rep else "BTCUSDT"),
        )
        .upper()
        .strip()
    )
    lim = st.number_input(
        "–ù–æ–≤—ã–π –ª–∏–º–∏—Ç –∏–º–ø–∞–∫—Ç–∞ (bps)",
        1.0,
        200.0,
        float(df.loc[sym, "suggest_limit_bps"])
        if rep and sym in df.index and df.loc[sym, "suggest_limit_bps"]
        else 25.0,
    )
    if st.button("üíæ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–∞–∫ –æ–±—â–∏–π –ª–∏–º–∏—Ç (spot)"):
        update_settings(spot_max_impact_bps=float(lim))
        st.success(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ–±—â–∏–π –ª–∏–º–∏—Ç –∏–º–ø–∞–∫—Ç–∞: {lim} bps")
