
from __future__ import annotations
import streamlit as st
import pandas as pd
from utils.dataframe import arrow_safe
from utils.envs import get_api_client, get_settings

st.title("üìà –°–∫—Ä–∏–Ω–µ—Ä ‚Äî –æ–±—ä—ë–º –∏ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (spot)")

s = get_settings()
if not (s.api_key and s.api_secret):
    st.warning("–£–∫–∞–∂–∏—Ç–µ API-–∫–ª—é—á–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ¬´–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ¬ª.")
    st.stop()

api = get_api_client()
q = st.text_input("–§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ —Ç–∏–∫–µ—Ä–∞", value="USDT")
top_n = int(st.slider("–°–∫–æ–ª—å–∫–æ –ø–∞—Ä –ø–æ–∫–∞–∑–∞—Ç—å (–ø–æ 24h –æ–±—ä—ë–º—É)", 5, 100, 20))
try:
    tk = api.tickers(category="spot")
    rows = (tk.get("result") or {}).get("list") or []
    # –ø—Ä–æ—Å—Ç–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ turnover24h
    def as_float(value, default=0.0):
        try:
            return float(value)
        except (TypeError, ValueError):
            return default
    rows = [r for r in rows if q.upper() in str(r.get("symbol","")).upper()]
    rows.sort(key=lambda r: as_float(r.get("turnover24h",0)), reverse=True)
    if rows:
        st.dataframe(
            arrow_safe(pd.DataFrame(rows[:top_n])),
            use_container_width=True,
            hide_index=True,
        )
    else:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥ —Ç–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä.")
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∏–∫–µ—Ä–æ–≤: {e}")
