
from __future__ import annotations
import streamlit as st
from utils.envs import get_api_client, get_settings, update_settings, creds_ok
from utils.log import log

st.title("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")

s = get_settings()
with st.form("creds"):
    st.subheader("–î–æ—Å—Ç—É–ø –∫ Bybit")
    api_key = st.text_input("API Key", value=s.api_key, type="password")
    api_secret = st.text_input("API Secret", value=s.api_secret, type="password")
    testnet = st.toggle("Testnet", value=s.testnet)
    dry = st.toggle("DRY-RUN (—Å–∏–º—É–ª—è—Ü–∏—è)", value=s.dry_run, help="–ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ ‚Äî –∑–∞—è–≤–∫–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è, —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è.")
    submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
    if submitted:
        update_settings(api_key=api_key.strip(), api_secret=api_secret.strip(), testnet=testnet, dry_run=dry)
        st.success("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

st.divider()
st.subheader("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
if creds_ok():
    api = get_api_client()
    try:
        t = api.server_time()
        st.success(f"–°–≤—è–∑—å —Å API –µ—Å—Ç—å. –°–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: {t.get('result',{}).get('timeSecond', '‚Äî')}")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

    st.write("---")
    st.caption("–õ–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä—ã")
    sym = st.text_input("–¢–∏–∫–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏", value="BTCUSDT")
    if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ç–∏–∫–µ—Ä"):
        try:
            info = api.instruments_info(category="spot", symbol=sym.strip().upper())
            st.json(info)
            tk = api.tickers(category="spot", symbol=sym.strip().upper())
            st.json(tk)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {e}")
else:
    st.warning("–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á–∏ –≤—ã—à–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ.")
