
from __future__ import annotations
import streamlit as st
from utils.envs import get_api_client, get_settings
from utils.twap_spot import twap_spot

st.title("üß© TWAP –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å (Spot)")

s = get_settings()
if not (s.api_key and s.api_secret):
    st.warning("–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ¬´–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ¬ª.")
    st.stop()

with st.form("twap"):
    symbol = st.text_input("–°–∏–º–≤–æ–ª", value="BTCUSDT").upper().strip()
    side = st.selectbox("–°—Ç–æ—Ä–æ–Ω–∞", ["Buy","Sell"])
    qty = st.text_input("–û–±—â–∏–π –æ–±—ä—ë–º (qty)", value="0.01")
    slices = st.number_input("–ß–∏—Å–ª–æ —Å—Ä–µ–∑–æ–≤", 2, 50, int(s.twap_slices or 5))
    child_secs = st.number_input("–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å—Ä–µ–∑–∞–º–∏ (—Å–µ–∫)", 1, 120, int(s.twap_child_secs or 10))
    agg_bps = st.number_input("–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å (bps)", 0.0, 50.0, float(s.twap_aggressiveness_bps or 2.0))
    batch = st.checkbox("Batch mode (–¥–æ 10 –æ—Ä–¥–µ—Ä–æ–≤ –∑–∞ —Ä–∞–∑)", value=False)
    run = st.form_submit_button("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å TWAP")

if run:
    api = get_api_client()
    try:
        if batch:
            from utils.twap_spot_batch import twap_spot_batch

            result = twap_spot_batch(api, symbol, side, float(qty), int(slices), float(agg_bps))
            st.success("TWAP (batch) –∑–∞–ø—É—â–µ–Ω.")
            st.json(result)
        else:
            result = twap_spot(api, symbol, side, float(qty), int(slices), int(child_secs), float(agg_bps))
            st.success(f"–ó–∞–ø—É—â–µ–Ω–æ. –î–æ—á–µ—Ä–Ω–∏—Ö –æ—Ä–¥–µ—Ä–æ–≤: {len(result)}")
            for idx, payload in enumerate(result):
                st.json({"child": idx, "resp": payload})
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")
