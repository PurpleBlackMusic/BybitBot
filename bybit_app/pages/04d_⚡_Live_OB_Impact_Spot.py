
from __future__ import annotations
import streamlit as st
from utils.envs import get_api_client, get_settings
from utils.ws_orderbook import LiveOrderbook

st.title("‚ö° Live Orderbook Impact (Spot) ‚Äî VWAP –æ—Ü–µ–Ω–∫–∞")

s = get_settings()
api = get_api_client()
lob = LiveOrderbook(api, category="spot")

sym = st.text_input("–°–∏–º–≤–æ–ª", value="BTCUSDT")
side = st.selectbox("–°—Ç–æ—Ä–æ–Ω–∞", ["buy","sell"])
qty = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (base)", 0.0, 1e9, 0.01, 0.001)
limit = st.selectbox("–ì–ª—É–±–∏–Ω–∞ —Ä–∞—Å—á—ë—Ç–∞", [50,200,1000], index=1)

if st.button("üîé –û—Ü–µ–Ω–∏—Ç—å VWAP"):
    ob = lob.get_book(sym, limit=int(limit))
    est = lob.vwap_for(sym, side, float(qty), limit=int(limit))
    st.json({"best": est.get("best"), "vwap": est.get("vwap"), "levels": est.get("levels")})
    if est.get("vwap") and est.get("best"):
        slip_bps = (float(est["vwap"])/float(est["best"]) - 1.0)*10000.0 if side=='buy' else (1.0 - float(est["vwap"])/float(est["best"]))*10000.0
        st.metric("–û—Ü–µ–Ω–∫–∞ —Å–ª–∏–ø–ø–µ–¥–∂–∞ (bps)", f"{slip_bps:.2f}")
st.caption("–ü–æ –¥–æ–∫–∞–º: REST orderbook –¥–∞—ë—Ç —Å–ª–µ–ø–æ–∫ –¥–æ 1000 —É—Ä–æ–≤–Ω–µ–π; Public WS –ø—É—à–∏—Ç 1/50/200/1000 —É—Ä–æ–≤–Ω–∏ —Å —á–∞—Å—Ç–æ—Ç–æ–π 10‚Äì300–º—Å. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º REST –∫–∞–∫ —Ñ–æ–ª–ª–±—ç–∫.")
