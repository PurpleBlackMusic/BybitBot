
from __future__ import annotations
import streamlit as st, pandas as pd, numpy as np, time
from utils.envs import get_settings
from utils.bybit_api import BybitAPI, BybitCreds
from utils.impact import estimate_vwap_from_orderbook

st.title("üåä –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å (Sampler) ‚Äî Spot")

s = get_settings()
api = BybitAPI(BybitCreds(s.api_key, s.api_secret, s.testnet))
symbol = st.text_input("–°–∏–º–≤–æ–ª", value="BTCUSDT").upper().strip()
side = st.selectbox("–°—Ç–æ—Ä–æ–Ω–∞", ["Buy","Sell"])
qtys = st.text_input("–û–±—ä—ë–º—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, base)", value="0.001,0.003,0.005,0.01")
samples = st.number_input("–°—ç–º–ø–ª–æ–≤ —Å—Ç–∞–∫–∞–Ω–∞", 1, 50, 5)
pause = st.number_input("–ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å—ç–º–ø–ª–∞–º–∏, —Å–µ–∫", 0, 60, 1)

if st.button("‚ñ∂Ô∏è –ó–∞–º–µ—Ä–∏—Ç—å"):
    qs = [float(x.strip()) for x in qtys.split(",") if x.strip()]
    rows = []
    for i in range(samples):
        ob = api.orderbook(category="spot", symbol=symbol, limit=200)
        for q in qs:
            est = estimate_vwap_from_orderbook(ob, side=side, qty_base=q)
            rows.append({"sample": i, "qty": q, "impact_bps": est.get("impact_bps"), "vwap": est.get("vwap"), "mid": est.get("mid")})
        time.sleep(pause)
    df = pd.DataFrame(rows)
    st.dataframe(df, use_container_width=True)
    st.caption("–°–æ–≤–µ—Ç: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ p75 impact –¥–ª—è –ø–æ—Ä–æ–≥–∞ –∏–º–ø–∞–∫—Ç–∞ –Ω–∞ –ø–∞—Ä–µ.")
