from __future__ import annotations

from typing import Optional


def format_sell_close_message(
    *,
    symbol: str,
    qty_text: str,
    base_asset: str,
    price_text: str,
    pnl_text: str,
    sold_text: Optional[str] = None,
    remainder_text: Optional[str] = None,
    position_closed: bool = False,
) -> str:
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–∞–∂–µ/–∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –µ–¥–∏–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."""

    message = (
        f"üî¥ {symbol}: –∑–∞–∫—Ä—ã—Ç–∏–µ {qty_text} {base_asset} –ø–æ {price_text}, "
        f"PnL —Å–¥–µ–ª–∫–∏ {pnl_text}"
    )

    details: list[str] = []
    if sold_text:
        details.append(f"–ø—Ä–æ–¥–∞–Ω–æ: {sold_text}")
    if remainder_text:
        details.append(f"–æ—Å—Ç–∞–ª–æ—Å—å: {remainder_text}")
    elif position_closed:
        details.append("–ø–æ–∑–∏—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞")

    if details:
        message += " (" + "; ".join(details) + ")"

    return message

